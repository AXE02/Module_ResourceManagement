@using Telerik.Web.Mvc.UI
<link rel='stylesheet' href="@Url.Content("~/Areas/RBM/Scripts/fullcalendar/dist/fullcalendar.css")" />
<link rel='stylesheet' href="@Url.Content("~/Areas/RBM/Content/main.css")" />
<script src="@Url.Content("~/Areas/RBM/Scripts/moment.min.js")"></script>
<script src="@Url.Content("~/Areas/RBM/Scripts/fullcalendar/dist/fullcalendar.js")"></script>

@section Information
{
    The calendar helps you to plan your fieldwork, inform the LMTs about your planned work and, book sleeping places and equipment.
    <br />
    The calendar shows all reservations in the calendar or as a list. By using the filter (green section on the left) you can display (1) only our bookings, (2) bookings of a specific region, (3) instruments and sleeping places.
    <br />
    To add your planed fieldwork and book resources use the “Book Resources” button.
    <br />
    <br />
    uptdate: 27.02.2020
    <p>
       <!-- <a href="/RBM/Help/Index/#_Toc434570750" class="bx-informationLink" title="go to help" target="_blank">More</a>-->
    </p>
}

<div class="editor-field">
    <div id="displayView" class="btn-group" data-toggle="buttons">
        <label class="btn btn-default  active">
            <input name="DisplayView" type="radio" autocomplete="off" checked value="Calendar"> Calendar
        </label>
        <label class="btn btn-default">
            <input name="DisplayView" type="radio" autocomplete="off" value="List"> List
        </label>
    </div>



</div>


<div style="
    /* border-style: solid; */
    /* border-color: lightgray; */
    border-width: 2px;
    margin-top: 20px;
">
    <div id='calendar'></div>
    <div id="eventList"></div>
    <div id="scheduleList"></div>
</div>

@section LeftPane
{
    <div id="Content_Filter">

    </div>
}


@*@(Html.Telerik().Window()
    .Name("Window_Add")
    .Title("Book Resource")
    .Draggable(true)
    .Modal(true)
    .Visible(false)
    .Scrollable(false)
    .Width(1000)
    .ContentHtmlAttributes(new { @style="overflow:auto; height:auto; min-height:225px; min-width:400px"})
    .Content(@<text>
                <div id="Content_Creation"></div>
            </text>)
    .ClientEvents(clientEvents => clientEvents
        .OnClose("Window_Creation_OnClose")
    ))*@


@(Html.Telerik().Window()
                    .Name("Window_Show")
                    .Title("Show Event")
                    .Draggable(true)
                    .Modal(true)
                    .Visible(false)
                    .Scrollable(true)
                    .Width(900)
                    .ContentHtmlAttributes(new { @style = "overflow:auto; width:auto; height:auto; min-height:225px; min-width:400px" })
                    .Content(@<text>
                        <div id="Content_Creation2"></div>
                    </text>)
                                                    .ClientEvents(clientEvents => clientEvents
                                                        .OnClose("Window_Creation_OnClose")
                                                    ))


<script type="text/javascript">

    function getURL(type) {
        if (type == "eventsource") {
            return '@Url.Content("~/RBM/Calendar/GetAllEvents")';
        }
        else if (type == "schedulesource") {
            return '@Url.Content("~/RBM/Calendar/GetAllSchedules")';
        }
    }

    function getFunction(type, byUser = false) {
        return function (start, end, timezone, callback) {
            var o = { st: start, ed: end, byUser: byUser};

            $.ajax({
                url: getURL(type),
                dataType: 'json',
                type: 'POST',
                //data: {start:start, end: end},
                data: JSON.stringify(o),
                contentType: 'application/json; charset=utf-8',
                success: function (doc) {
                    var events = [];
                    $.each(doc, function (key, value) {
                        var val = $.parseJSON(value[0]);

                        // the end date is exclusive in fullcalendar. To display the duration correct 1 days needs to be added
                        var new_end_date = new Date(val['end']);
                        new_end_date.setDate(new_end_date.getDate() + 1);

                        events.push({
                            allDay: true,
                            title: val['title'],
                            start: val['start'],
                            end: new_end_date,
                            color: val['color'],
                            eventId: val['eventId']
                        });
                    });

                    callback(events);
                    console.log(events);
                }
            });
        }




    }

    var calsources = {

        eventsource: {
            events: getFunction("eventsource")
        },
        usereventsource: {
            events: getFunction("eventsource", true)
        },
        userschedulesource: {
            events: getFunction("schedulesource", true)
        },
        schedulesource: {
            events: getFunction("schedulesource")
        }
    }


    $(window).load(function () {

        var selectedRadio = $("input[name='CalendarView']:checked").val();
        var view = 'month,basicWeek,basicDay';
        //alert($("input[name='CalendarView']:checked").val());
        //if (selectedRadio == "allDay")
        //{ view = 'month,basicWeek,basicDay'; }
        //else
        //{ view = 'month,agendaWeek,agendaDay'; }

        var calendar = $('#calendar').fullCalendar({
            firstDay: 1,
            height: 550,
            header:
            {
                left: 'prev,next today',
                center: 'title',
                right: view
                //right: 'month,basicWeek,basicDay'
               // right: 'month,agendaWeek,agendaDay'
            },
            defaultView: 'basicWeek',
            eventLimit: true, // for all non-agenda views
            views: {
                agenda: {
                    eventLimit: 5 // adjust to 6 only for agendaWeek/agendaDay
                }
            },

            selectable: false,
            selectHelper: false,

            editable: false,
            eventSources: [ calsources.schedulesource],

            dayClick: function (date, jsEvent, view) {
                $.get('@Url.Action("SetFilter", "Calendar", new RouteValueDictionary { { "area", "RBM"} })', { startdate: date.format() }, function (data) {
                    window.location.href = 'Create';
                })
            },

            eventClick: function (event) {
                var id = event.eventId;
                $.get('@Url.Action("Show", "Schedule", new RouteValueDictionary { { "area", "RBM"} })', { id: id }, function (data) {
                    window.location.href = '../Schedule/Show/' + id;
                })
            },

        });


        $.get('@Url.Action("TreeFilterSchedules", "Calendar")', function (data) {

            $('#Content_Filter').html(data);
        });
    })




    function AddEvent(e) {

          $.get('@Url.Action("Create", "Schedule", new RouteValueDictionary { { "area", "RBM"} })', function (data) {
              $('#Window_Add #Content_Creation').html(data);

              var window = $('#Window_Add').data('tWindow');
              window.center().open();
          });
    }



    function Window_Creation_OnClose() {

        $('#Content_Creation').empty();
    }



</script>
