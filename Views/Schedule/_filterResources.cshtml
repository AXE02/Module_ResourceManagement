@using Telerik.Web.Mvc.UI;
@using BExIS.Web.Shell.Areas.RBM.Models.Booking;

@model ResourceFilterModel

<br />
<div class="overlayHeader">
    <span>Filter</span>
</div>
@(Html.Telerik().TreeView()
                        .Name("TreeView")
                        .ShowCheckBox(true)
                        .ClientEvents(events => events
                        .OnChecked("onChangeFilter")
                        )

                         .BindTo<AttributeDomainItemsModel>(Model.TreeItems.Distinct(), (item, attribute) =>
                             {
                                 item.Text = attribute.AttrName;
                                 item.Value = attribute.AttrId.ToString();
                                 item.Checkable = false;
                                 item.Checked = false;
                                 item.Expanded = true;


                                 foreach (BExIS.Web.Shell.Areas.RBM.Models.ResourceStructure.DomainItemModel di in attribute.DomainItems)
                                 {
                                     TreeViewItem subitem = new TreeViewItem();
                                     item.Items.Add(subitem);

                                     subitem.Text = di.Key;
                                     subitem.Value = di.Key;
                                     subitem.LinkHtmlAttributes["id"] = attribute.AttrId;
                                     subitem.LinkHtmlAttributes["class"] = "domainItem";

                         //subitem.Action("OnSelectTreeViewItem", "Schedule", new RouteValueDictionary { { "area", "RBM" }, { "SelectedItem", subitem.Value }, { "Parent", item.Value } });
                     }
                             }
                        )
                        .ExpandAll(true)
)


<script type="text/javascript">

    $(document).ready(function () {
        resetAllTelerikIconTitles();
        addTooltips();
    });

    function treeView() {
        return $('#TreeView').data('tTreeView');
    }

    function onChangeFilter(e) {

            var checkedItems = [];

            if ($('#TreeView>ul>li>ul>li>div :checked').length > 0) {

                $('#TreeView>ul>li>ul>li>div :checked').each(function () {

                    var parentSelect = $(this).parent().parent();
                    var itemSelect = parentSelect.find(':input[name="itemValue"]');
                 //   var attrId = parentSelect.find('span[class$="domainItem"]').attr('id');
                    var attrId = parentSelect.find("span.domainItem").attr('id');

                    var item = attrId + "_" + itemSelect.attr('value');

                    checkedItems.push(item);

                })

                //convert to string to send it to sever
                var checkedItemAsString = checkedItems.toString();

                $.get('@Url.Action("OnChangeFilter", "Schedule", new RouteValueDictionary { { "area", "RBM"} })', { selectedItems: checkedItemAsString }, function (data) {

                    $('#Content_Resources').html(data);
                });
            }
            else {
                $.get('@Url.Action("LoadResources", "Schedule", new RouteValueDictionary { { "area", "RBM"} })', function (data) {

                    $('#Content_Resources').html(data);

                });
            }
        }

</script>





